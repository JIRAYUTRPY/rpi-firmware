# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Raspberry pi API

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    # - name: Install dependencies
    #   run: |
    #     python3 -m pip install --upgrade pip
    #     if [ -f requirements.txt ]; then pip3 install -r requirements.txt; fi
    #     - name: Install build dependencies
    #     run: pip install build
    - name: Build source distribution
    #   env:
    #     TIANGOLO_BUILD_PACKAGE: ${{ matrix.package }}
      run: python -m build --sdist
    - name: Decompress source distribution
      run: |
        cd dist
        tar xvf fastapi*.tar.gz
    - name: Install test dependencies
      run: |
        cd dist/fastapi*/
        pip install -r requirements-tests.txt
    #   env:
    #     TIANGOLO_BUILD_PACKAGE: ${{ matrix.package }}
    - name: Run source distribution tests
      run: |
        cd dist/fastapi*/
        bash scripts/test.sh
    - name: Build wheel distribution
      run: |
        cd dist
        pip wheel --no-deps fastapi*.tar.gz
    - name: Dump GitHub context
    #   env:
    #     GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    # - name: Run a one-line script
    #   run: |
    #     echo Hello raspberry!
    #     ls
    # - name: run firmware
    #   run : |
    #     python3 zkteco.py
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Test with pytest
    #   run: |
    #     pytest
